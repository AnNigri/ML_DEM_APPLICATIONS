pred
net <- neuralnet(survived ~ pclass+
sexmale+sibsp+parch+fare+age+
embarkedQ+embarkedS, data = m,
hidden = 5,threshold=0.01,rep=10)
install.packages("randomForest")
library(randomForest)
model2 <- randomForest(survived ~ ., data = train, ntree = 500, mtry = 6, importance = TRUE)
model2 <- randomForest(survived ~ ., data = train, ntree = 500, mtry = 6, importance = TRUE)
model2 <- randomForest(survived ~ ., data = train, ntree = 500, mtry = 6, importance = TRUE)
model2 <- randomForest(survived ~ pclass+sex+age+sibsp+parch+fare+embarked,
, data = train, ntree = 500, mtry = 6, importance = TRUE)
model2 <- randomForest(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked
, data = train, ntree = 500, mtry = 6, importance = TRUE)
model2 <- randomForest(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train, ntree = 500, mtry = 6, importance = TRUE)
library(randomForest)
model2 <- randomForest(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train, ntree = 500, mtry = 6, importance = TRUE)
model2 <- randomForest(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train)
library(rpart)
fit <- rpart(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train, ntree = 500, mtry = 6, importance = TRUE)
fit <- rpart(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train)
fit
plot(fit)
library(rattle)
install.packages("rattle")
library(rattle)
fancyRpartPlot(fit)
predict(fit)
predict(fit,test[,2:8])
predict(fit,test[,2:8])
pr.test.tree <- data.frame(pr=predict(fit,test[,2:8])))
pr.test.tree <- data.frame(pr=predict(fit,test[,2:8]))
pr.test.tree
logitpred <- ifelse(pr.test$pr>0.5,1,0)
treepred <- ifelse(pr.test$pr>0.5,1,0)
predroc <- data.frame(tree=treepred,test=test$survived)
str(predroc)
calculate_roc(treepred,test$survived,0.05)
basicplot <- ggplot(predroc, aes(d = tree, m =test)) + geom_roc()
basicplot + labs(title="ROC CURVE",subtitle="Logit Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
fit <- rpart(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train)
plot(fit)
fancyRpartPlot(fit)
pr.test.tree <- data.frame(pr=predict(fit,test[,2:8]))
treepred <- ifelse(pr.test$pr>0.5,1,0)
predroc <- data.frame(tree=treepred,test=test$survived)
calculate_roc(treepred,test$survived,0.05)
basicplot <- ggplot(predroc, aes(d = tree, m =test)) + geom_roc()
basicplot + labs(title="ROC CURVE",subtitle="Logit Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
basicplot + labs(title="ROC CURVE",subtitle="Tree Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
fit <- rpart(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train,
method="class",
control=rpart.control(minsplit=2, cp=0))
fancyRpartPlot(fit)
plot(fit)
fancyRpartPlot(fit)
pr.test.tree <- data.frame(pr=predict(fit,test[,2:8]))
treepred <- ifelse(pr.test$pr>0.5,1,0)
predroc <- data.frame(tree=treepred,test=test$survived)
str(predroc)
calculate_roc(treepred,test$survived,0.05)
basicplot <- ggplot(predroc, aes(d = tree, m =test)) + geom_roc()
basicplot + labs(title="ROC CURVE",subtitle="Tree Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
pr.test.tree
result <- predict(pr.test.tree,newdata=test,type='response')
result <- predict(treepred,newdata=test,type='response')
result <- predict(fit,newdata=test,type='response')
treepred
confusionMatrix(data=as.factor(treepred ), reference=as.factor(test$survived))
treepred
predictions <- predict(fit, newdata=test[,2:8], type="response")
test[,2:8]
fit
predictions <- predict(fit, newdata=test[,2:8])
ROCRpred <- prediction(predictions, test$survived)
predictions
ROCRpred <- prediction(predictions, test$survived)
test
test$survived
ROCRpred <- prediction(predictions, test$survived)
predictions
predict(fit,test[,2:8])
predict(fit,test[,2:8],type = "prob")
predict(fit,test[,2:8],type = "prob")[,2]
pr.test.tree <- data.frame(pr=predict(fit,test[,2:8],type = "prob")[,2]))
predict(fit,test[,2:8],type = "prob")[,2]
pr <- predict(fit,test[,2:8],type = "prob")[,2]
pr.test.tree <- data.frame(pr=pr)
treepred <- ifelse(pr.test$pr>0.5,1,0)
predroc <- data.frame(tree=treepred,test=test$survived)
calculate_roc(treepred,test$survived,0.05)
basicplot <- ggplot(predroc, aes(d = tree, m =test)) + geom_roc()
basicplot + labs(title="ROC CURVE",subtitle="Tree Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
confusionMatrix(data=as.factor(pr.test$pr), reference=as.factor(test$survived))
pr.test$pr
pr.test
pr.test.tree <- data.frame(pr=pr)
confusionMatrix(data=as.factor(pr.test.tree$pr), reference=as.factor(test$survived))
pr.test.tree
test
confusionMatrix(data=as.factor(pr.test.tree$pr), reference=as.factor(test$survived))
table(pr.test.tree)
table(pr.test.tree$pr)
pr.test.tree
confusionMatrix(data=as.factor(treepred), reference=as.factor(test$survived))
ROCRpred <- prediction(treepred, test$survived)
library(ROCR)
ROCRpred <- prediction(treepred, test$survived)
#library(ROCR)
#predictions <- predict(glm.out.train, newdata=test, type="response")
ROCRpred <- prediction(predictions, test$survived)
#library(ROCR)
predictions <- predict(glm.out.train, newdata=test, type="response")
ROCRpred <- prediction(predictions, test$survived)
ts<- test$survived
ts
ROCRpred <- prediction(treepred, ts)
treepred
test$survived
ROCRpred <- prediction(as.factor(treepred), as.factor(test$survived))
confusionMatrix(data=as.factor(treepred), reference=as.factor(test$survived))
predroc <- data.frame(tree=treepred,test=test$survived)
predroc
calculate_roc(treepred,test$survived,0.05)
calc_auc(treepred,test$survived,0.05)
basicplot <- ggplot(predroc, aes(d = tree, m =test)) + geom_roc()
basicplot
basicplot + labs(title="ROC CURVE",subtitle="Tree Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
calc_auc(basicplot)$AUC
test
tree
predroc <- data.frame(tree=treepred,test=test$survived)
predroc
basicplot <- ggplot(predroc, aes(d = tree, m =test)) + geom_roc()
basicplot
predroc$test
basicplot <- ggplot(predroc, aes(d = tree, m =test)) + geom_roc()
basicplot
model2 <- randomForest(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train)
library(readr)
library(caret)
install.packages("devtools")
library(devtools)
devtools::install_github("hadley/ggplot2")
devtools::install_github("sachsmc/plotROC")
library(plotROC)
library(tidyverse)
library(dplyr)
#Data
titanic <- read_csv("titanic_clean.csv")
View(titanic)
head(titanic)
tail(titanic)
titanic <- titanic[-1310,]
tail(titanic)
names(titanic)
str(titanic)
## fare - Passenger Fare                                          ##
## cabin - Cabin                                                  ##
## embarked - Port of Embarkation                                 ##
## (C = Cherbourg; Q = Queenstown; S = Southampton)               ##
##                                                                ##
## boat - Lifeboat (if survived)                                  ##
## body - Body number (if did not survive and body was recovered) ##
## home.dest - dest
####################################################################
####################################################################
names(titanic)
titanic <- titanic %>%
select(survived,pclass,sex,
age,sibsp,parch,fare,embarked)
table(titanic$survived)
str(titanic)
table(titanic$survived)
str(titanic)
table(titanic$survived)
###################################################################
###################################################################
#library
library(readr)
##library(caret)
install.packages("devtools")
#Data
titanic <- read_csv("titanic_clean.csv")
head(titanic)
tail(titanic)
titanic <- titanic[-1310,]
tail(titanic)
names(titanic)
str(titanic)
## fare - Passenger Fare                                          ##
## cabin - Cabin                                                  ##
## embarked - Port of Embarkation                                 ##
## (C = Cherbourg; Q = Queenstown; S = Southampton)               ##
##                                                                ##
## boat - Lifeboat (if survived)                                  ##
## body - Body number (if did not survive and body was recovered) ##
## home.dest - dest
####################################################################
####################################################################
names(titanic)
titanic <- titanic %>%
select(survived,pclass,sex,
age,sibsp,parch,fare,embarked)
table(titanic$survived)
str(titanic)
#titanic <- titanic %>% mutate(pclass=factor(pclass),
#                       sex=factor(sex),survived=factor(survived))
#titanic <- titanic %>% mutate(survived=factor(survived))
table(titanic$survived)
###################################################################
###################################################################
#Data Viz
theme_set(theme_minimal())
titanic %>% ggplot(aes(factor(pclass),fill=factor(sex))) +
geom_bar(position="dodge")
titanic %>% ggplot(aes(factor(pclass),fill=factor(sex))) +
geom_bar(position="dodge")+
facet_grid(".~survived")
titanic %>% ggplot( aes(x = age, fill = factor(survived))) +
facet_wrap(~pclass) +
geom_histogram(binwidth = 5) +
ggtitle("Age by Pclass") +
xlab("Age") +
ylab("Total Count")
titanic %>%
ggplot(aes(x = age, fill = factor(survived))) +
facet_wrap(~sex + pclass) +
geom_histogram(binwidth = 10) +
ggtitle("Age by class and gender")+
xlab("Age") +
ylab("Total Count")
titanic %>%
ggplot(aes(x = age, fill = factor(survived))) +
facet_wrap(~sex + pclass) +
geom_density(binwidth = 1) +
ggtitle("Age by class and gender")+
xlab("Age") +
ylab("Total Count")
train.model.ind <- createDataPartition(titanic$survived, p = 0.8, list = FALSE)
View(train.model.ind)
train <- titanic[train.model.ind,]
test <- titanic[-train.model.ind,]
train$survived
test$survived
str(train)
str(test)
library(MASS) # for Pima data sets
library(ggplot2)
library(plotROC)
names(train)
# train model on training data
glm.out.train <- glm(survived ~pclass+sex+age+sibsp+parch+fare+embarked,
data = train,
family = binomial)
summary(glm.out.train)
pr.test <- data.frame(pr=predict(glm.out.train, test[,2:8]))
logitpred <- ifelse(pr.test$pr>0.5,1,0)
predroc <- data.frame(logit=logitpred,test=test$survived)
str(predroc)
calculate_roc(logitpred,test$survived,0.05)
basicplot <- ggplot(predroc, aes(d = logit, m =test)) + geom_roc()
basicplot + labs(title="ROC CURVE",subtitle="Logit Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
library(randomForest)
library(rpart)
library(rattle)
model2 <- randomForest(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train, ntree = 500, mtry = 6, importance = TRUE)
fit <- rpart(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train,
method="class",
control=rpart.control(minsplit=2, cp=0))
plot(fit)
fancyRpartPlot(fit)
pr <- predict(fit,test[,2:8],type = "prob")[,2]
pr.test.tree <- data.frame(pr=pr)
treepred <- ifelse(pr.test$pr>0.5,1,0)
predroc <- data.frame(tree=treepred,test=test$survived)
str(predroc)
calculate_roc(treepred,test$survived,0.05)
basicplot <- ggplot(predroc, aes(d = tree, m =test)) + geom_roc()
basicplot + labs(title="ROC CURVE",subtitle="Tree Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
###################################################################
###################################################################
#library
library(readr)
##library(caret)
install.packages("devtools")
library(devtools)
devtools::install_github("hadley/ggplot2")
devtools::install_github("sachsmc/plotROC")
library(plotROC)
library(tidyverse)
library(dplyr)
#Data
titanic <- read_csv("titanic_clean.csv")
View(titanic)
head(titanic)
tail(titanic)
titanic <- titanic[-1310,]
tail(titanic)
names(titanic)
str(titanic)
## fare - Passenger Fare                                          ##
## cabin - Cabin                                                  ##
## embarked - Port of Embarkation                                 ##
## (C = Cherbourg; Q = Queenstown; S = Southampton)               ##
##                                                                ##
## boat - Lifeboat (if survived)                                  ##
## body - Body number (if did not survive and body was recovered) ##
## home.dest - dest
####################################################################
####################################################################
names(titanic)
titanic <- titanic %>%
select(survived,pclass,sex,
age,sibsp,parch,fare,embarked)
table(titanic$survived)
str(titanic)
#titanic <- titanic %>% mutate(pclass=factor(pclass),
#                       sex=factor(sex),survived=factor(survived))
#titanic <- titanic %>% mutate(survived=factor(survived))
table(titanic$survived)
###################################################################
###################################################################
#Data Viz
theme_set(theme_minimal())
titanic %>% ggplot(aes(factor(pclass),fill=factor(sex))) +
geom_bar(position="dodge")
titanic %>% ggplot(aes(factor(pclass),fill=factor(sex))) +
geom_bar(position="dodge")+
facet_grid(".~survived")
titanic %>% ggplot( aes(x = age, fill = factor(survived))) +
facet_wrap(~pclass) +
geom_histogram(binwidth = 5) +
ggtitle("Age by Pclass") +
xlab("Age") +
ylab("Total Count")
titanic %>%
ggplot(aes(x = age, fill = factor(survived))) +
facet_wrap(~sex + pclass) +
geom_histogram(binwidth = 10) +
ggtitle("Age by class and gender")+
xlab("Age") +
ylab("Total Count")
titanic %>%
ggplot(aes(x = age, fill = factor(survived))) +
facet_wrap(~sex + pclass) +
geom_density(binwidth = 1) +
ggtitle("Age by class and gender")+
xlab("Age") +
ylab("Total Count")
train.model.ind <- createDataPartition(titanic$survived, p = 0.8, list = FALSE)
train <- titanic[train.model.ind,]
test <- titanic[-train.model.ind,]
train$survived
test$survived
str(train)
str(test)
library(MASS) # for Pima data sets
library(ggplot2)
library(plotROC)
# train model on training data
glm.out.train <- glm(survived ~pclass+sex+age+sibsp+parch+fare+embarked,
data = train,
family = binomial)
summary(glm.out.train)
pr.test <- data.frame(pr=predict(glm.out.train, test[,2:8]))
logitpred <- ifelse(pr.test$pr>0.5,1,0)
predroc <- data.frame(logit=logitpred,test=test$survived)
str(predroc)
calculate_roc(logitpred,test$survived,0.05)
basicplot <- ggplot(predroc, aes(d = logit, m =test)) + geom_roc()
basicplot + labs(title="ROC CURVE",subtitle="Logit Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
install.packages("randomForest")
library(randomForest)
library(rpart)
library(randomForest)
library(rpart)
library(rattle)
model2 <- randomForest(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train, ntree = 500, mtry = 6, importance = TRUE)
model2 <- randomForest(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train, ntree = 500, mtry = 6, importance = TRUE)
library(randomForest)
library(rpart)
library(rattle)
model2 <- randomForest(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train, ntree = 500, mtry = 6, importance = TRUE)
fit <- rpart(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train,
method="class",
control=rpart.control(minsplit=2, cp=0))
plot(fit)
fancyRpartPlot(fit)
pr <- predict(fit,test[,2:8],type = "prob")[,2]
pr.test.tree <- data.frame(pr=pr)
treepred <- ifelse(pr.test$pr>0.5,1,0)
predroc <- data.frame(tree=treepred,test=test$survived)
str(predroc)
calculate_roc(treepred,test$survived,0.05)
basicplot <- ggplot(predroc, aes(d = tree, m =test)) + geom_roc()
basicplot + labs(title="ROC CURVE",subtitle="Tree Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
pr.test.tree
treepred <- ifelse(pr.test.tree$pr>0.5,1,0)
predroc <- data.frame(tree=treepred,test=test$survived)
str(predroc)
calculate_roc(treepred,test$survived,0.05)
basicplot <- ggplot(predroc, aes(d = tree, m =test)) + geom_roc()
basicplot + labs(title="ROC CURVE",subtitle="Tree Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
fit <- rpart(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train,
method="class")
plot(fit)
fancyRpartPlot(fit)
pr <- predict(fit,test[,2:8],type = "prob")[,2]
pr.test.tree <- data.frame(pr=pr)
treepred <- ifelse(pr.test.tree$pr>0.5,1,0)
predroc <- data.frame(tree=treepred,test=test$survived)
str(predroc)
calculate_roc(treepred,test$survived,0.05)
basicplot <- ggplot(predroc, aes(d = tree, m =test)) + geom_roc()
basicplot + labs(title="ROC CURVE",subtitle="Tree Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
fit <- rpart(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train)
plot(fit)
fancyRpartPlot(fit)
pr <- predict(fit,test[,2:8],type = "prob")[,2]
pr.test.tree <- data.frame(pr=pr)
treepred <- ifelse(pr.test.tree$pr>0.5,1,0)
predroc <- data.frame(tree=treepred,test=test$survived)
str(predroc)
calculate_roc(treepred,test$survived,0.05)
basicplot <- ggplot(predroc, aes(d = tree, m =test)) + geom_roc()
basicplot + labs(title="ROC CURVE",subtitle="Tree Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
fit <- rpart(survived ~ pclass+sex+age+sibsp+parch+
fare+embarked, data = train)
plot(fit)
fancyRpartPlot(fit)
pr <- predict(fit,test[,2:8],type = "prob")[,2]
pr.test.tree <- data.frame(pr=pr)
treepred <- ifelse(pr.test.tree$pr>0.5,1,0)
predroc <- data.frame(tree=treepred,test=test$survived)
str(predroc)
calculate_roc(treepred,test$survived,0.05)
basicplot <- ggplot(predroc, aes(d = tree, m =test)) + geom_roc()
basicplot + labs(title="ROC CURVE",subtitle="Tree Vs. Test",
x ="False Positive Rate", y = "True Positive Rate")+
annotate("text", x = .60, y = .55,
label = paste("AUC =", round(calc_auc(basicplot)$AUC, 2))) +
scale_x_continuous("1 - Specificity", breaks = seq(0, 1, by = .1))
